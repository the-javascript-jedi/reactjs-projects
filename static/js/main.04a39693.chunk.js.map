{"version":3,"sources":["components/card/Card.js","components/card-list/CardList.js","components/SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","console","log","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAeeA,G,kBAbF,SAACC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,6BAEL,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCGTC,EATE,SAACR,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQC,UCE9BM,G,MARG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,8BACE,uBAAOC,KAAK,SAASC,YAAaH,EAAaI,SAAUH,QCuChDI,E,kDAvCb,aAAe,IAAD,8BACZ,gBAeFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAftC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,gEAOO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLC,QAAQC,IAAI,QAASF,GACrB,EAAKT,SAAS,CAAEV,SAAUmB,S,+BAQtB,IAAD,EAC2BG,KAAKR,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZY,EAAmBvB,EAASwB,QAAO,SAAC7B,GACxC,OAAOA,EAAQE,KAAK4B,cAAcC,SAASf,EAAYc,kBAEzD,OACE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAckB,KAAKlB,eAErB,uBACA,cAAC,EAAD,CAAUJ,SAAUuB,IACpB,oC,GAnCUI,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.04a39693.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"monster\"\r\n        src={`https://robohash.org/${props.monster.id}?set=set2?&size=180x180`}\r\n      />\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport Card from \"../card/Card\";\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card monster={monster} key={monster.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./searchBox.css\";\r\nconst SearchBox = ({ placeHolder, handleChange }) => {\r\n  return (\r\n    <div>\r\n      <input type=\"search\" placeholder={placeHolder} onChange={handleChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/CardList\";\nimport SearchBox from \"./components/SearchBox/SearchBox\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => {\n        console.log(\"users\", users);\n        this.setState({ monsters: users });\n      });\n  }\n  // using arrow functions the scope of this will automatically be set to the place they were defined in the first place\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeHolder=\"searchMonsters\"\n          handleChange={this.handleChange}\n        />\n        <br />\n        <CardList monsters={filteredMonsters}></CardList>\n        <></>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}